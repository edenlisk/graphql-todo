type Query {
    todo(id: ID!): Todo,
    user(id: ID!): User,
    todos(userId: ID!): [Todo!]
}

type User {
    id: ID!,
    name: String,
    username: String,
}

input CreateUserInput {
    name: String,
    username: String,
    password: String
}


type Todo {
    id: ID!,
    userId: String!
    description: String,
    date: String,
    dueDate: String
    isCompleted: Boolean,
    category: String
    subTasks: [SubTask!]
}

type SubTask {
    id: ID!
    description: String,
    isCompleted: Boolean
}


input InputTodo {
    title: String,
    description: String,
    userId: String!,
    category: String
}

input InputLogin {
    username: String!,
    password: String!
}

type LoggedIn {
    token: String!
    user: User
}


type Mutation {
    createTodo(inputTodo: InputTodo): Todo
    updateTodo(id: ID!, inputTodo: InputTodo): Todo
    deleteTodo(id: ID!): Boolean
    deleteSubTask(id: ID!): Boolean
}